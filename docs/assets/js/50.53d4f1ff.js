(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{743:function(s,a,t){"use strict";t.r(a);var e=t(62),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"docker-compose"}},[s._v("Docker Compose "),a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("使用 Docker Compose 可以轻松、高效的管理容器，它是一个用于定义和运行多容器 Docker 的应用程序工具")])]),s._v(" "),a("li",[a("p",[s._v("Docker Compose 将所管理的容器分为三层，分别是工程（project）、服务（service）、容器（container）")])]),s._v(" "),a("li",[a("p",[s._v("Docker Compose 运行目录下的所有文件（docker-compose.yml）组成一个工程,一个工程包含多个服务，每个服务中定义了容器运行的镜像、参数、依赖，一个服务可包括多个容器实例")])])])]),s._v(" "),a("h3",{attrs:{id:"检测是否安装-docker-compose"}},[s._v("检测是否安装 docker compose "),a("a",{staticClass:"header-anchor",attrs:{href:"#检测是否安装-docker-compose"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" version\n")])])]),a("h3",{attrs:{id:"安装"}},[s._v("安装 "),a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")])]),s._v(" "),a("blockquote",[a("p",[s._v("这里以按照 "),a("code",[s._v("1.27.4")]),s._v(" 版本为例，最新版本可以在 "),a("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/docker/compose/releases"),a("OutboundLink")],1),s._v(" 查询到。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该步骤将 docker-compose 可执行文件下载到目标机器的 /usr/local/bin/docker-compose 位置；")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果网络比较慢，也可以手动下载，然放到 /usr/local/bin/docker-compose 位置。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-L")]),s._v(" https://github.com/docker/compose/releases/download/1.27.4/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该步骤给 /usr/local/bin/docker-compose 可执行文件授权")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 docker-compose 版本，检查是否安装成功")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n")])])]),a("p",[a("strong",[s._v("或者")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v("\n")])])]),a("h3",{attrs:{id:"docker-compose-yml-属性"}},[s._v("docker-compose.yml 属性 "),a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml-属性"}},[s._v("#")])]),s._v(" "),a("blockquote",[a("p",[s._v("Compose允许用户通过一个docker-compose.yml模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。")]),s._v(" "),a("p",[s._v("Compose模板文件是一个定义服务、网络和卷的YAML文件。Compose模板文件默认路径是当前目录下的docker-compose.yml，可以使用.yml或.yaml作为文件扩展名。\nDocker-Compose标准模板文件应该包含version、services、networks 三大部分，最关键的是services和networks两个部分。")])]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("gateway")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ../dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway/\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./Dockerfile\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" pnoker/dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.0.0\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway/dc3/logs\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dc3net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("aliases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" dc3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("gateway\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("logs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dc3net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bridge'")]),s._v("\n")])])]),a("ul",[a("li",[a("strong",[s._v("version")]),s._v("：docker-compose的版本号")]),s._v(" "),a("li",[a("strong",[s._v("context")]),s._v("：Dockerfile的文件路径，也可以是到链接到git仓库的url，当提供的值是相对路径时，被解析为相对于撰写文件的路径，此目录也是发送到Docker守护进程的context")]),s._v(" "),a("li",[a("strong",[s._v("dockerfile")]),s._v("：使用dockerfile文件来构建，必须指定构建路径")]),s._v(" "),a("li",[a("strong",[s._v("image")]),s._v("：指定服务的镜像名称或镜像ID。如果镜像在本地不存在，Compose将会尝试拉取镜像")]),s._v(" "),a("li",[a("strong",[s._v("restart")]),s._v("：重启策略")]),s._v(" "),a("li",[a("strong",[s._v("ports")]),s._v("：端口映射列表，宿主机端口：容器端口")]),s._v(" "),a("li",[a("strong",[s._v("container_name")]),s._v("：Compose容器名称格式是：<项目名称><服务名称><序号>\n可以自定义项目名称、服务名称，但如果想完全控制容器的命名，可以使用标签指定")]),s._v(" "),a("li",[a("strong",[s._v("hostname")]),s._v("：容器的hostname")]),s._v(" "),a("li",[a("strong",[s._v("volumes")]),s._v("：挂载一个目录或者一个已存在的数据卷容器，可以直接使用 [HOST:CONTAINER]格式，或者使用[HOST:CONTAINER:ro]格式，后者对于容器来说，数据卷是只读的，可以有效保护宿主机的文件系统")]),s._v(" "),a("li",[a("strong",[s._v("networks")]),s._v("：设置网络模式")])]),s._v(" "),a("h3",{attrs:{id:"常见指令"}},[s._v("常见指令 "),a("a",{staticClass:"header-anchor",attrs:{href:"#常见指令"}},[s._v("#")])]),s._v(" "),a("h4",{attrs:{id:"_1-ps-列出所有运行容器"}},[s._v("1.ps（列出所有运行容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_1-ps-列出所有运行容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),a("h4",{attrs:{id:"_2-logs-查看服务日志输出"}},[s._v("2.logs（查看服务日志输出） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_2-logs-查看服务日志输出"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" logs\n")])])]),a("h4",{attrs:{id:"_3-port-打印绑定的公共端口"}},[s._v("3.port（打印绑定的公共端口） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_3-port-打印绑定的公共端口"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" port dc3-web "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("\n")])])]),a("h4",{attrs:{id:"_4-build-构建或者重新构建服务"}},[s._v("4.build（构建或者重新构建服务） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_4-build-构建或者重新构建服务"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" build\n")])])]),a("h4",{attrs:{id:"_5-start-启动指定服务已存在的容器"}},[s._v("5.start（启动指定服务已存在的容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_5-start-启动指定服务已存在的容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" start dc3-web\n")])])]),a("h4",{attrs:{id:"_6-stop-停止已运行的服务的容器"}},[s._v("6.stop（停止已运行的服务的容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_6-stop-停止已运行的服务的容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" stop dc3-web\n")])])]),a("h4",{attrs:{id:"_7-rm-删除指定服务的容器"}},[s._v("7.rm（删除指定服务的容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_7-rm-删除指定服务的容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" dc3-web\n")])])]),a("h4",{attrs:{id:"_8-up-构建、启动容器"}},[s._v("8.up（构建、启动容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_8-up-构建、启动容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up\n")])])]),a("h4",{attrs:{id:"_9-kill-通过发送-sigkill-信号来停止指定服务的容器"}},[s._v("9.kill（通过发送 SIGKILL 信号来停止指定服务的容器） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_9-kill-通过发送-sigkill-信号来停止指定服务的容器"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" dc3-web\n")])])]),a("h4",{attrs:{id:"_10-pull-下载服务镜像"}},[s._v("10.pull（下载服务镜像） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_10-pull-下载服务镜像"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" pull\n")])])]),a("h4",{attrs:{id:"_11-scale-设置指定服务运气容器的个数"}},[s._v("11.scale（设置指定服务运气容器的个数） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_11-scale-设置指定服务运气容器的个数"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" scale dc3-web"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),a("h4",{attrs:{id:"_12-run-在一个服务上执行一个命令"}},[s._v("12.run（在一个服务上执行一个命令） "),a("a",{staticClass:"header-anchor",attrs:{href:"#_12-run-在一个服务上执行一个命令"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" run web "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);